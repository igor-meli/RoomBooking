<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.roombooking"/>
    <!--Beans-->
    <bean id="userDao" class="com.roombooking.dao.user.UserJPADao"/>
    <bean id="roomDao" class="com.roombooking.dao.room.RoomJPADao"/>
    <bean id="timetableDao" class="com.roombooking.dao.timetable.TimetableJPADao"/>
    <bean id="bookingDao" class="com.roombooking.dao.booking.BookingJPADao"/>
    <bean id="roomtypeDao" class="com.roombooking.dao.roomtype.RoomTypeJPADao"/>
    <bean id="rightsDao" class="com.roombooking.dao.rights.RightsJPADao"/>
    <bean id="roleDao" class="com.roombooking.dao.role.RoleJPADao"/>
    <bean id="positionDao" class="com.roombooking.dao.position.PositionJPADao"/>

    <bean id="bookingFactory" class="com.roombooking.service.BookingFactoryImpl"/>

    <bean id="roomService" class="com.roombooking.service.RoomService"/>
    <bean id="userService" class="com.roombooking.service.UserService"/>
    <bean id="timetableService" class="com.roombooking.service.TimetableService"/>
    <bean id="bookingService" class="com.roombooking.service.BookingService"/>
    <bean id="adminBookingService" class="com.roombooking.service.AdminBookingService" parent="bookingService"/>
    <bean id="roomTypeService" class="com.roombooking.service.RoomTypeService"/>
    <bean id="positionService" class="com.roombooking.service.PositionService"/>
    <bean id="roleService" class="com.roombooking.service.RoleService"/>
    <bean id="rightsService" class="com.roombooking.service.RightsService"/>

    <!--Beans-->


    <!-- Data Source -->
    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="user" value="${login}"/>
        <property name="password" value="${password}"/>
        <property name="jdbcUrl" value="${mysql-uri}"/>
        <property name="driverClass" value="${mysql-driver}"/>

        <property name="acquireIncrement" value="5"/>
        <property name="partitionCount" value="3"/>
        <property name="maxConnectionsPerPartition" value="40"/>
        <property name="minConnectionsPerPartition" value="10"/>
        <property name="statementsCacheSize" value="100"/>

    </bean>
    <jdbc:embedded-database id="myTestDB" type="HSQL">
        <jdbc:script location="classpath:data.sql"/>
    </jdbc:embedded-database>
    <!-- Data Source -->

    <!--JPA (Hibernate)-->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceUnitName" value="roomBE"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true"/>
                <property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect"/>
                <property name="generateDdl" value="true"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="use_sql_comments">false</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--JPA (Hibernate)-->

</beans>